; SMT-LIBv2 description generated by Yosys 0.51+101 (git sha1 7ff514a43, g++ 11.4.0-1ubuntu1~22.04 -Og -fPIC)
; yosys-smt2-module main
(declare-sort |main_s| 0)
(declare-fun |main_is| (|main_s|) Bool)
(declare-fun |main#0| (|main_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-clock clk posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |main_n clk| ((state |main_s|)) Bool (|main#0| state))
(declare-fun |main#1| (|main_s|) Bool) ; \incr
; yosys-smt2-input incr 1
; yosys-smt2-witness {"offset": 0, "path": ["\\incr"], "smtname": "incr", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |main_n incr| ((state |main_s|)) Bool (|main#1| state))
; yosys-smt2-witness {"offset": 0, "path": ["\\past_incr"], "smtname": 2, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |main#2| (|main_s|) (_ BitVec 1)) ; \past_incr
; yosys-smt2-register past_incr 1
(define-fun |main_n past_incr| ((state |main_s|)) Bool (= ((_ extract 0 0) (|main#2| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["\\past_q"], "smtname": 3, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |main#3| (|main_s|) (_ BitVec 1)) ; \past_q
; yosys-smt2-register past_q 1
(define-fun |main_n past_q| ((state |main_s|)) Bool (= ((_ extract 0 0) (|main#3| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["\\q"], "smtname": 4, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |main#4| (|main_s|) (_ BitVec 1)) ; \q
; yosys-smt2-output q 1
; yosys-smt2-register q 1
(define-fun |main_n q| ((state |main_s|)) Bool (= ((_ extract 0 0) (|main#4| state)) #b1))
(declare-fun |main#5| (|main_s|) Bool) ; \rst
; yosys-smt2-input rst 1
; yosys-smt2-witness {"offset": 0, "path": ["\\rst"], "smtname": "rst", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |main_n rst| ((state |main_s|)) Bool (|main#5| state))
(define-fun |main#6| ((state |main_s|)) Bool (bvsgt (|main#2| state) #b0)) ; \increasing
(define-fun |main#7| ((state |main_s|)) Bool (not (or  (|main#6| state) false))) ; $logic_not$flop_rnm.sv:25$12_Y
(define-fun |main#8| ((state |main_s|)) Bool (bvslt (|main#3| state) #b0)) ; $lt$flop_rnm.sv:21$4_Y
(define-fun |main#9| ((state |main_s|)) Bool (not (or  (|main#8| state) false))) ; $logic_not$flop_rnm.sv:21$5_Y
(define-fun |main#10| ((state |main_s|)) Bool (bvsge (|main#3| state) #b0)) ; $ge$flop_rnm.sv:21$6_Y
(define-fun |main#11| ((state |main_s|)) Bool (not (or  (|main#10| state) false))) ; $logic_not$flop_rnm.sv:21$7_Y
(define-fun |main#12| ((state |main_s|)) Bool (and (or  (|main#9| state) false) (or  (|main#11| state) false))) ; \q_is_NaN
(define-fun |main#13| ((state |main_s|)) Bool (or  (|main#7| state) false  (|main#12| state) false)) ; $logic_or$flop_rnm.sv:25$13_Y
(define-fun |main#14| ((state |main_s|)) (_ BitVec 1) (bvadd (|main#3| state) #b0)) ; $add$flop_rnm.sv:22$9_Y
(define-fun |main#15| ((state |main_s|)) Bool (= (|main#14| state) (|main#3| state))) ; \q_is_Inf
(define-fun |main#16| ((state |main_s|)) Bool (or  (|main#13| state) false  (|main#15| state) false)) ; $logic_or$flop_rnm.sv:25$14_Y
(define-fun |main#17| ((state |main_s|)) Bool (bvsle (|main#3| state) (|main#4| state))) ; $le$flop_rnm.sv:25$15_Y
(define-fun |main#18| ((state |main_s|)) Bool (or  (|main#16| state) false  (|main#17| state) false)) ; $logic_or$flop_rnm.sv:25$16_Y
; yosys-smt2-assert 0 $assert$flop_rnm.sv:22$11 flop_rnm.sv:22.44-25.73
(define-fun |main_a 0| ((state |main_s|)) Bool (or (|main#18| state) (not true))) ; $assert$flop_rnm.sv:22$11
(define-fun |main#19| ((state |main_s|)) (_ BitVec 1) (bvadd (|main#4| state) (ite (|main#1| state) #b1 #b0))) ; $add$flop_rnm.sv:11$2_Y
(define-fun |main#20| ((state |main_s|)) (_ BitVec 1) (ite (|main#5| state) #b0 (|main#19| state))) ; $0\q[0:0]
(define-fun |main#21| ((state |main_s|)) (_ BitVec 1) (ite (|main#5| state) #b0 (|main#4| state))) ; $0\past_q[0:0]
(define-fun |main#22| ((state |main_s|)) (_ BitVec 1) (ite (|main#5| state) #b0 (ite (|main#1| state) #b1 #b0))) ; $0\past_incr[0:0]
(define-fun |main_a| ((state |main_s|)) Bool 
  (|main_a 0| state)
)
(define-fun |main_u| ((state |main_s|)) Bool true)
(define-fun |main_i| ((state |main_s|)) Bool true)
(define-fun |main_h| ((state |main_s|)) Bool true)
(define-fun |main_t| ((state |main_s|) (next_state |main_s|)) Bool (and
  (= (|main#20| state) (|main#4| next_state)) ; $procdff$26 \q
  (= (|main#21| state) (|main#3| next_state)) ; $procdff$27 \past_q
  (= (|main#22| state) (|main#2| next_state)) ; $procdff$28 \past_incr
)) ; end of module main
; yosys-smt2-topmod main
; end of yosys output
