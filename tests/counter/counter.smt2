; SMT-LIBv2 description generated by Yosys 0.51+101 (git sha1 0c335eeea, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)
; yosys-smt2-module main
(declare-sort |main_s| 0)
(declare-fun |main_is| (|main_s|) Bool)
(declare-fun |main#0| (|main_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-clock clk posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |main_n clk| ((state |main_s|)) Bool (|main#0| state))
; yosys-smt2-witness {"offset": 0, "path": ["\\counter"], "smtname": 1, "smtoffset": 0, "type": "reg", "width": 2}
(declare-fun |main#1| (|main_s|) (_ BitVec 2)) ; \counter
; yosys-smt2-register counter 2
(define-fun |main_n counter| ((state |main_s|)) (_ BitVec 2) (|main#1| state))
; yosys-smt2-witness {"offset": 0, "path": ["\\previous"], "smtname": 2, "smtoffset": 0, "type": "reg", "width": 2}
(declare-fun |main#2| (|main_s|) (_ BitVec 2)) ; \previous
; yosys-smt2-register previous 2
(define-fun |main_n previous| ((state |main_s|)) (_ BitVec 2) (|main#2| state))
(declare-fun |main#3| (|main_s|) Bool) ; \rstn
; yosys-smt2-input rstn 1
; yosys-smt2-witness {"offset": 0, "path": ["\\rstn"], "smtname": "rstn", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |main_n rstn| ((state |main_s|)) Bool (|main#3| state))
(define-fun |main#4| ((state |main_s|)) Bool (not (or  (= ((_ extract 0 0) (|main#1| state)) #b1) (= ((_ extract 1 1) (|main#1| state)) #b1)))) ; $eq$counter.sv:17$4_Y
(define-fun |main#5| ((state |main_s|)) Bool (bvuge (|main#1| state) (|main#2| state))) ; $ge$counter.sv:17$5_Y
(define-fun |main#6| ((state |main_s|)) Bool (or  (|main#4| state) false  (|main#5| state) false)) ; $logic_or$counter.sv:17$6_Y
; yosys-smt2-assert 0 prop_proven
(define-fun |main_a 0| ((state |main_s|)) Bool (or (|main#6| state) (not true))) ; prop_proven
; yosys-smt2-assert 1 prop_cex
(define-fun |main_a 1| ((state |main_s|)) Bool (or (|main#5| state) (not true))) ; prop_cex
(define-fun |main#7| ((state |main_s|)) (_ BitVec 2) (ite (|main#3| state) (|main#1| state) #b00)) ; $0\previous[1:0]
(define-fun |main#8| ((state |main_s|)) (_ BitVec 2) (bvadd (|main#1| state) #b01)) ; $add$counter.sv:13$3_Y
(define-fun |main#9| ((state |main_s|)) (_ BitVec 2) (ite (|main#3| state) (|main#8| state) #b00)) ; $0\counter[1:0]
(define-fun |main_a| ((state |main_s|)) Bool (and
  (|main_a 0| state)
  (|main_a 1| state)
))
(define-fun |main_u| ((state |main_s|)) Bool true)
(define-fun |main_i| ((state |main_s|)) Bool (and
  (= (|main#1| state) #b00) ; counter
  (= (|main#2| state) #b00) ; previous
))
(define-fun |main_h| ((state |main_s|)) Bool true)
(define-fun |main_t| ((state |main_s|) (next_state |main_s|)) Bool (and
  (= (|main#7| state) (|main#2| next_state)) ; $procdff$15 \previous
  (= (|main#9| state) (|main#1| next_state)) ; $procdff$14 \counter
)) ; end of module main
; yosys-smt2-topmod main
; end of yosys output
